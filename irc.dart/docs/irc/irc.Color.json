{"name":"Color","qualifiedName":"irc/irc.Color","comment":"","isAbstract":true,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"BLACK":{"name":"BLACK","qualifiedName":"irc/irc.Color.BLACK","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"BLUE":{"name":"BLUE","qualifiedName":"irc/irc.Color.BLUE","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"BOLD":{"name":"BOLD","qualifiedName":"irc/irc.Color.BOLD","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"BROWN":{"name":"BROWN","qualifiedName":"irc/irc.Color.BROWN","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"CYAN":{"name":"CYAN","qualifiedName":"irc/irc.Color.CYAN","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"DARK_BLUE":{"name":"DARK_BLUE","qualifiedName":"irc/irc.Color.DARK_BLUE","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"DARK_GRAY":{"name":"DARK_GRAY","qualifiedName":"irc/irc.Color.DARK_GRAY","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"DARK_GREEN":{"name":"DARK_GREEN","qualifiedName":"irc/irc.Color.DARK_GREEN","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"GREEN":{"name":"GREEN","qualifiedName":"irc/irc.Color.GREEN","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"LIGHT_GRAY":{"name":"LIGHT_GRAY","qualifiedName":"irc/irc.Color.LIGHT_GRAY","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"MAGENTA":{"name":"MAGENTA","qualifiedName":"irc/irc.Color.MAGENTA","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"OLIVE":{"name":"OLIVE","qualifiedName":"irc/irc.Color.OLIVE","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"PURPLE":{"name":"PURPLE","qualifiedName":"irc/irc.Color.PURPLE","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"RED":{"name":"RED","qualifiedName":"irc/irc.Color.RED","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"RESET":{"name":"RESET","qualifiedName":"irc/irc.Color.RESET","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"REVERSE":{"name":"REVERSE","qualifiedName":"irc/irc.Color.REVERSE","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"TEAL":{"name":"TEAL","qualifiedName":"irc/irc.Color.TEAL","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"UNDERLINE":{"name":"UNDERLINE","qualifiedName":"irc/irc.Color.UNDERLINE","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"WHITE":{"name":"WHITE","qualifiedName":"irc/irc.Color.WHITE","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"YELLOW":{"name":"YELLOW","qualifiedName":"irc/irc.Color.YELLOW","comment":"","final":true,"static":true,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"irc/irc.Color.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>irc/irc.Color.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"irc/irc.Color.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"irc/irc.Color.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>irc/irc.Color.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>irc/irc.Color.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"irc/irc.Color.noSuchMethod","comment":"<p><a>irc/irc.Color.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>irc/irc.Color.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>irc/irc.Color.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>irc/irc.Color.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"irc/irc.Color.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}