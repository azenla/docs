{"name":"irc_message","qualifiedName":"irc_message/irc_message","comment":"","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"Message","qualifiedName":"irc_message/irc_message.Message"},{"name":"MessageParser","qualifiedName":"irc_message/irc_message.MessageParser"}],"typedef":{},"error":[]},"packageName":"irc_message","packageIntro":"<h1>dart-irc_message</h1>\n<blockquote>\n<p>Performant IRC parser for Dart based on <a href=\"https://github.com/expr/irc-message\">irc-message</a>.</p></blockquote>\n<p>irc_message implements a Converter, and allows you to convert raw IRC lines individually or transform them from another stream (i.e. a Socket).</p>\n<h2>Installation</h2>\n<p>Add <code>irc_message</code> as a dependency of your project via <code>pubspec.yaml</code>.</p>\n<pre class=\"yaml\"><code>dependencies:\n  irc_message: any\n</code></pre>\n<h2>Usage</h2>\n<h3>Converting A Single Line</h3>\n<pre class=\"dart\"><code>import \"package:irc_message/irc_message.dart\";\n\nvoid convert() {\n    MessageParser messageParser = new MessageParser();\n    Message message = messageParser.convert(\":NickServ!ns@services. PRIVMSG #Test :Hello!\");\n\n    String command = message.command;\n    String prefix = message.prefix;\n    String params = message.params.join(\", \");\n\n    print(\"$command from $prefix: $params\");\n}\n\nvoid main() =&gt; convert();\n</code></pre>\n<h3>Converting Socket Stream</h3>\n<pre class=\"dart\"><code>import \"package:irc_message/irc_message.dart\";\nimport \"dart:convert\";\nimport \"dart:io\";\n\nconst HOSTNAME = \"irc.freenode.net\";\nconst PORT = 6667;\n\nvoid socketTest() {\n    Socket.connect(HOSTNAME, PORT).then((stream) {\n        stream.transform(UTF8.decoder)\n              .transform(const LineSplitter())\n              .transform(new MessageParser())\n              .listen((message) {\n                   String command = message.command;\n                   String prefix = message.prefix;\n                   String params = message.params.join(\", \");\n\n                   print(\"$command from $prefix: $params\");\n               });\n    });\n}\n\nvoid main() =&gt; socketTest();\n</code></pre>"}